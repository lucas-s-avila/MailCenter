version: "3.9"
services:
  postgres:
    image: postgres
    #ports:
    #  - '5432:5432'
    expose:
      - 5432
    volumes:
      - sql-data:/var/lib/postgresql/data
    env_file:
      - variables.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  web:
    build:
      context: ..
      dockerfile: docker/web/Dockerfile
    command: > 
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             if python manage.py createsuperuser --noinput; then
              gunicorn MailCenter.wsgi:application --bind 0.0.0.0:8000 -t 300 -w 9 --preload --worker-tmp-dir /dev/shm
             else
              gunicorn MailCenter.wsgi:application --bind 0.0.0.0:8000 -t 300 -w 9 --preload --worker-tmp-dir /dev/shm
             fi"
    expose:
      - 8000
    volumes:
      - static_volume:/MailCenter/staticfiles
    env_file:
      - variables.env
    depends_on:
      postgres:
        condition: service_healthy
  nginx:
    image: nginx:1.15-alpine
    ports:
      - "5000:80"
      - "443:443"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/staticfiles
    depends_on:
      - web
  
  redis:
    image: redis
    command: redis-server
    ports:
      - "6379:6379"
  celery:
    build:
      context: ..
      dockerfile: docker/worker/Dockerfile
    command: celery -A mail_sender worker -l INFO
    env_file:
      - variables.env
    depends_on:
      - redis

volumes:
  static_volume:
  sql-data: